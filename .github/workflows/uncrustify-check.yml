name: Uncrustify Check

# на push проще тестировать
on:
  push

jobs:
  uncrustify-check:
    runs-on: ubuntu-latest

    # steps:
    #   # Авторизация в репозитории с использованием SSH
    #   # данный шаг осуществляет авторизацию в репозитории, так как он приватный - это обязательно
    #   # uses webfactory/ssh-agent@v0.8.0 - библиотека упрощающая использование SSH
    #   - uses: webfactory/ssh-agent@v0.8.0
    #     with:
    #       # Используется приватный ключ из секретов организации.
    #       # В любом репозитории QCoreTech можно его использовать
    #       ssh-private-key: ${{ secrets.MQBOT }}

      # Клонирование репозитория
      - uses: actions/checkout@v3

    # последняя версия Uncrustify для ubuntu - 0.72; для arch - 0.77.1
    # чтобы настройки на машине разработчика совпадали с настройками при проверке
    # явно подтягиваем версию uncrustify-0.77.1
    # TODO: этот шаг занимает много времени, возможно можно кэшировать?
    - name: Set up Uncrustify
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/uncrustify/uncrustify/archive/uncrustify-0.77.1.tar.gz
        tar -xzvf uncrustify-0.77.1.tar.gz
        cd uncrustify-uncrustify-0.77.1
        mkdir build
        cd build
        cmake ..
        make
        sudo make install

    # - name: Download Uncrustify Config
    #   run: |
    #     git clone git@github.com:QCoreTech/format.cmake.git
    #     cp format.cmake/uncrustify.cfg .

    # Так как файл с конфигурационными настройками uncrustify.cfg не хранится
    # в каждом репозитории, нужно подтянуть его отсюда:
    # https://github.com/QCoreTech/format.cmake/blob/master/uncrustify.cfg
    # - name: Download Uncrustify Config
    #   run: |
    #     # curl -o uncrustify.cfg https://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@raw.githubusercontent.com/QCoreTech/format.cmake/master/uncrustify.cfg
    #     # curl -o uncrustify.cfg https://gist.githubusercontent.com/Neo-yoyo/cbd14dd9893d0142d5339e7e778e2a1c/raw
    #     # curl -o uncrustify.cfg -H "Authorization: token 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" -H "Accept: application/vnd.github.v3.raw" https://raw.githubusercontent.com/QCoreTech/format.cmake/master/uncrustify.cfg
    #     # curl -o uncrustify.cfg https://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@raw.githubusercontent.com/QCoreTech/format.cmake/blob/master/uncrustify.cfg
    #     # curl -H "Authorization: token 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" -H "Accept: application/vnd.github.v3.raw" -o uncrustify.cfg -L https://raw.githubusercontent.com/QCoreTech/format.cmake/master/uncrustify.cfg

    # Проверка форматирования:
    # - если все файлы проекта отформатированы, проверка будет пройдена успешно;
    # - если для каких-то файлов форматирование не применено - проверка провалится
    # и будет выведен список файлов, не соотвествующих форматированию.
    # TODO: файл с настройками должен подтягиваться из стороннего приватного репозитория,
    # сейчас он лежит в корневой директории проекта.
    # Пример вывода при неуспехе:
    # Uncrustify check failed for the following files:
    # FAIL: ./src/main.cpp (File size changed from 1824 to 1664)
    - name: Run Uncrustify Check
      run: |
        result=$(find . -type f \( -name "*.cpp" -o -name "*.hpp" \) -not -path "./uncrustify-uncrustify-0.77.1/*" -exec uncrustify --check -c uncrustify.cfg {} \; 2>&1)
        if echo "$result" | grep -q "FAIL" ; then
          echo "Uncrustify check failed for the following files:"
          echo "$result" | grep "FAIL"
          exit 1
        else
          echo "Uncrustify check passed for all files."
          exit 0
        fi





